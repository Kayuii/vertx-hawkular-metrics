Index: src/main/java/io/vertx/ext/hawkular/impl/NetClientMeasurements.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/io/vertx/ext/hawkular/impl/NetClientMeasurements.java	(revision )
+++ src/main/java/io/vertx/ext/hawkular/impl/NetClientMeasurements.java	(revision )
@@ -0,0 +1,22 @@
+/*
+ * Copyright 2015 Red Hat, Inc.
+ *
+ *  All rights reserved. This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License v1.0
+ *  and Apache License v2.0 which accompanies this distribution.
+ *
+ *  The Eclipse Public License is available at
+ *  http://www.eclipse.org/legal/epl-v10.html
+ *
+ *  The Apache License v2.0 is available at
+ *  http://www.opensource.org/licenses/apache2.0.php
+ *
+ *  You may elect to redistribute this code under either of these licenses.
+ */
+package io.vertx.ext.hawkular.impl;
+
+/**
+ * @author Thomas Segismont
+ */
+public class NetClientMeasurements {
+}
Index: src/main/java/io/vertx/ext/hawkular/impl/NetClientMetricsImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/io/vertx/ext/hawkular/impl/NetClientMetricsImpl.java	(revision )
+++ src/main/java/io/vertx/ext/hawkular/impl/NetClientMetricsImpl.java	(revision )
@@ -0,0 +1,64 @@
+/*
+ * Copyright 2015 Red Hat, Inc.
+ *
+ *  All rights reserved. This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License v1.0
+ *  and Apache License v2.0 which accompanies this distribution.
+ *
+ *  The Eclipse Public License is available at
+ *  http://www.eclipse.org/legal/epl-v10.html
+ *
+ *  The Apache License v2.0 is available at
+ *  http://www.opensource.org/licenses/apache2.0.php
+ *
+ *  You may elect to redistribute this code under either of these licenses.
+ */
+package io.vertx.ext.hawkular.impl;
+
+import io.vertx.core.net.SocketAddress;
+import io.vertx.core.spi.metrics.TCPMetrics;
+
+import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.ConcurrentMap;
+
+/**
+ * @author Thomas Segismont
+ */
+public class NetClientMetricsImpl implements TCPMetrics<Void> {
+  private final ConcurrentMap<SocketAddress, NetClientMeasurements> clientMeasurements = new ConcurrentHashMap<>(0);
+
+  @Override
+  public Void connected(SocketAddress remoteAddress) {
+    return null;
+  }
+
+  @Override
+  public void disconnected(Void socketMetric, SocketAddress remoteAddress) {
+
+  }
+
+  @Override
+  public void bytesRead(Void socketMetric, SocketAddress remoteAddress, long numberOfBytes) {
+
+  }
+
+  @Override
+  public void bytesWritten(Void socketMetric, SocketAddress remoteAddress, long numberOfBytes) {
+
+  }
+
+  @Override
+  public void exceptionOccurred(Void socketMetric, SocketAddress remoteAddress, Throwable t) {
+
+  }
+
+  @Override
+  public boolean isEnabled() {
+    return true;
+  }
+
+  @Override
+  public void close() {
+
+  }
+}
